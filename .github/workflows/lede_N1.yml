#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: N1 OpenWrt

on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - 'N1.config'
  schedule:
    - cron: 0 20 * * 2,4,6,0
  watch:
    types: started
    
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: N1.config
  DIY_P1_SH: diy-lede1.sh
  DIY_P2_SH: diy-lede2.sh
  DIY_P3_SH: diy-part3.sh
  DIY_P5_SH: diy-lede4.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master
      
    - name: 安装依赖包
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        
    - name: 下载源码
      run: git clone https://github.com/coolsnowwolf/lede openwrt
      
    - name: checkout
      run: |
        cd openwrt
        git checkout 3403deeaf8ffe3bb255230dd901336adf35e48f3
      
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      
    - name: 运行1脚本
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        ../$DIY_P1_SH
        
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a
    
    - name: 脚本5
      run: |
        chmod +x $DIY_P5_SH
        cd openwrt
        source $GITHUB_WORKSPACE/$DIY_P5_SH
    - name: .config运行脚本2
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        ../$DIY_P2_SH
        
        
    - name: 脚本3
      run: |
        chmod +x $DIY_P3_SH
        cd openwrt
        source $GITHUB_WORKSPACE/$DIY_P3_SH && Diy-Part1
        
    - name: emmc脚本插件
      run: |
        cd openwrt/package/
        git clone https://github.com/tuanqing/install-program
        
    - name: mknop
      run: |
        git clone https://github.com/tuanqing/mknop
        
#

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
        
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
    - name: Build firmware
      run: |
        cp openwrt/bin/targets/*/*/*.tar.gz mknop/openwrt
        
    - name: Build firmware2
      run: |
        cd mknop
        sudo ./gen_openwrt -d -k latest
        
        devices=("phicomm-n1" "vplus" "rk3328" "s9xxx")
        cd out
        for x in ${devices[*]}; do
        cd $x
        filename=$(ls | awk -F '.img' '{print $1}')
        gzip *.img
        cd ../
        echo "firmware_$x=$filename" >> $GITHUB_ENV
        done
    - name: Upload firmware @ phicomm n1
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.firmware_phicomm-n1 }}
        path: mknop/out/phicomm-n1

    - name: Upload firmware @ vplus
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.firmware_vplus }}
        path: mknop/out/vplus

    - name: Upload firmware @ s9xxx
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.firmware_s9xxx }}
        path: mknop/out/s9xxx
        
    - name: Upload firmware @ rk3328
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.firmware_rk3328 }}
        path: mknop/out/rk3328
